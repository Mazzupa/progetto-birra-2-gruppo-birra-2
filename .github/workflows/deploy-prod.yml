name: Deploy in Production

on:
  push:
    branches: 
    - main

env:
  SONAR_TOKEN: 42990b8f57387714ba3e1d30f3b4d3d374fa5f54
  GITHUB_TOKEN: d4d0ea24d166f0f5ae4124a6692ea7afca6db150
  DOCKER_HUB_USERNAME: gruppobirra2
  DOCKER_HUB_ACCESS_TOKEN: 85835093-a510-4f6d-8667-d91134f69860     

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Build with Maven
      run: |
        cd backend
        mvn clean install -DskipTests=true
        mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent install sonar:sonar -Dsonar.projectKey=UnimibSoftEngCourse2021_progetto-birra-2-gruppo-birra-2
    
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: gruppobirra2
        password: 85835093-a510-4f6d-8667-d91134f69860

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@master

    - name: Build and push backend
      id: docker_build_backend
      uses: docker/build-push-action@v2
      with:
        context: ./backend 
        file: ./backend/Dockerfile-prod
        push: true
        tags: gruppobirra2/brewday:prod

    - name: Build and push frontend
      id: docker_build_frontend
      uses: docker/build-push-action@v2
      with:
        context: ./frontend 
        file: ./frontend/Dockerfile-prod
        push: true
        tags: gruppobirra2/brewday-frontend:prod

    - name: Build and push maximizebrew
      id: docker_build_maximizebrew
      uses: docker/build-push-action@v2
      with:
        context: ./maximizebrewtoday 
        file: ./maximizebrewtoday/Dockerfile
        push: true
        tags: gruppobirra2/maximizebrewtoday:prod
  
    - name: ssh deploy prod
      uses: appleboy/ssh-action@master
      with:
        host: ec2-18-156-174-69.eu-central-1.compute.amazonaws.com
        username: ubuntu
        password: progetto-is
        port: 22
        script: |
          kubectl rollout restart deploy brewday -n brewday
          kubectl rollout restart deploy brewday-frontend -n brewday
          kubectl rollout restart deploy maximizebrewtoday -n brewday
